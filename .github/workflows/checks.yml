name: check
on:
  pull_request:
  merge_group:

env:
  CGO_ENABLED: 0
  TEST_CATALYST_IMAGE: public.ecr.aws/docker/library/node:20-bookworm-slim

jobs:
  scan:
    name: scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Secret Scanning
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --only-verified
      - name: Scan current project
        uses: anchore/scan-action@v3
        with:
          path: "."
          output-format: table

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache-dependency-path: "**/go.sum"
      - name: Install dev dependencies
        run: make dev-deps
      - name: Run golangci-lint
        run: make lint

  test-linux:
    permissions:
      contents: read
      pull-requests: write
    name: test-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache-dependency-path: "**/go.sum"

      - name: Install dev dependencies
        run: make dev-deps

      - name: Pull test image
        run: docker pull ${TEST_CATALYST_IMAGE}

      - name: Run tests
        run: make test
        env:
          CATALYST_IMAGE: docker://${{ env.TEST_CATALYST_IMAGE }}

      - name: Generate code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: false
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '48 60'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  test-macos:
    name: test-macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Install and start Colima
        run: |
          brew install docker
          colima start
          docker pull ${TEST_CATALYST_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          check-latest: true
          cache-dependency-path: "**/go.sum"

      - name: Install dev dependencies
        run: make dev-deps

      - name: Run tests
        run: make test
        env:
          CATALYST_IMAGE: docker://${{ env.TEST_CATALYST_IMAGE }}

  snapshot-ccr-cli:
    name: snapshot-ccr-cli
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          cache-dependency-path: "**/go.sum"
          check-latest: true
      - uses: anchore/sbom-action/download-syft@v0.16.1
      - uses: sigstore/cosign-installer@v3
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          workdir: codecatalyst-runner
          version: latest
          args: release --snapshot --clean
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: codecatalyst-runner/dist/*
